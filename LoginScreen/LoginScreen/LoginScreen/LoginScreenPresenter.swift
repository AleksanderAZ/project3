//
//  LoginScreenPresenter.swift
//  LoginScreen
//
//  Created Z on 1/16/20.
//  Copyright © 2020 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginScreenPresenter: LoginScreenPresenterProtocol {

    weak private var view: LoginScreenViewProtocol?
    var interactor: LoginScreenInteractorProtocol?
    private let router: LoginScreenWireframeProtocol
    
    var statusHidePassword: Bool = true
    
    init(interface: LoginScreenViewProtocol, interactor: LoginScreenInteractorProtocol?, router: LoginScreenWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func setLogin(login: String) {
        interactor?.setLogin(login: login)
        updateView()
    }
    
    func setPassword(password: String) {
        var passwordNew = password
        if (isHidePassword()) {
            let password = interactor?.getPassword() ?? ""
            passwordNew = interactor?.changeHidePassword(password: password, passwordHide: passwordNew) ?? ""
        }
        interactor?.setPassword(password: passwordNew)
        updateView()
    }
    
    func isHidePassword()-> Bool {
        return statusHidePassword
    }
    
    func updateView() {
        guard let interactor = interactor else { return }
        let checkLogin: Check = interactor.getStatusCheckLogin()
        if case .no(let error) = checkLogin {
            view?.switchLoginButton(isHide: true, errorText: error)
            view?.switchPasswordTextFild(isHide: true, errorText: error)
            return
        }
        view?.switchPasswordTextFild(isHide: false, errorText: "")
        
        let checkPassword: Check = interactor.getStatusCheckPassword()
        if case .no(let error) = checkPassword {
            view?.switchLoginButton(isHide: true, errorText: error)
            return
        }
        view?.switchLoginButton(isHide: false, errorText: "")
    }
    
    func changeHidePassword()->String {
        statusHidePassword = !statusHidePassword
        if (isHidePassword()) {
            view?.setTittlePasswordButtonShow()
        }
        else {
            view?.setTittlePasswordButtonHide()
        }
        return getPasswordForShow()
    }
    
    func getPasswordForShow()->String {
        guard let password = interactor?.getPassword() else { return "" }
        if (isHidePassword()) {
            return String(repeating: CharactersChecking.charHidePassword, count: password.count)
        }
        else {
            return password
        }
    }
    
    func clickLogin() {
        router.login(login: interactor?.getLogin() ?? "", password: interactor?.getPassword() ?? "")
    }
    
    func openLink() {
        router.openLink()
    }
}
